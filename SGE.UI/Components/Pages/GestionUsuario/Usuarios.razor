@page "/usuarios"
@rendermode InteractiveServer
@inject CasoDeUsoUsuarioConsultarTodos CasoDeUsoUsuarioConsultarTodos
@inject CasoDeUsoUsuarioBaja CasoDeUsoUsuarioBaja
@inject NavigationManager Navegador

<PageTitle>SGE - Usuarios</PageTitle>
<button class="btn btn-primary" @onclick="AgregarUsuario">Agregar usuario</button>

<DialogoConfirmacion @ref="dialogo"/>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Email</th>
            <th></th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var u in _usuarios)
        {
            <tr>
                <td>@u.Id</td>
                <td>@u.Nombre</td>
                <td>@u.Apellido</td>
                <td>@u.Email</td>
                <td>@(u.EsAdmin ? " Admin " : " ")</td>
                <td>
                    <button class="btn btn-primary" @onclick="()=>EditarUsuario(u)">
                        Editar
                    </button>
                    <button class="btn btn-danger"@onclick="()=>ConfirmarEliminacion(u)">
                        Eliminar
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Usuario> _usuarios;
    private Usuario usuario = new Usuario();
    DialogoConfirmacion dialogo = null!;

    protected override void OnInitialized()
    {
        _usuarios = CasoDeUsoUsuarioConsultarTodos.Ejecutar();
    }

    // Alta de Usuarios
    private void AgregarUsuario()
    {
        Navegador.NavigateTo("agregar-usuario");
    }

     private void EditarUsuario(Usuario usuario)
    {
        Navegador.NavigateTo($"editar-usuario/{usuario.Id}");
    }


    // Baja de Usuarios Mensaje confirmacion
    private void ConfirmarEliminacion(Usuario usuario)
    {
        if (dialogo != null)
        {
            dialogo.Mostrar(
                $"Â¿Desea eliminar al usuario {usuario.Nombre} {usuario.Apellido}?",
                EventCallback.Factory.Create(this, () => EliminarUsuario(usuario))
            );
        }
    }

    private void EliminarUsuario(Usuario usuario)
    {
        CasoDeUsoUsuarioBaja.Ejecutar(usuario.Id, 1);
        _usuarios = CasoDeUsoUsuarioConsultarTodos.Ejecutar();
    }

    
}
