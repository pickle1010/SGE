@page "/usuarios"
@rendermode InteractiveServer
@inject IServicioGestionDeSesion ServicioGestionDeSesion
@inject CasoDeUsoUsuarioConsultarTodos CasoDeUsoUsuarioConsultarTodos
@inject CasoDeUsoUsuarioBaja CasoDeUsoUsuarioBaja
@inject NavigationManager Navegador

@if(!usuarioAutorizado)
{
    <h3>Acceso denegado</h3>
    <p>No tienes permiso para ver este contenido.</p>
}
else
{
    <PageTitle>SGE - Usuarios</PageTitle>
    <div class="d-flex align-items-center">
        <div class="me-auto">
            <h1>Usuarios</h1>
        </div>
        <button class="btn btn-primary" @onclick="AgregarUsuario">Agregar usuario</button>
    </div>

    <DialogoConfirmacion @ref="dialogo"/>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Email</th>
                <th></th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var u in _usuarios)
            {
                <tr>
                    <td>@u.Id</td>
                    <td>@u.Nombre</td>
                    <td>@u.Apellido</td>
                    <td>@u.Email</td>
                    <td>@(u.EsAdmin ? " Admin " : " ")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=>EditarUsuario(u)">
                            Editar
                        </button>
                        <button class="btn btn-danger"@onclick="()=>ConfirmarEliminacion(u)">
                            Eliminar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Usuario>? _usuarios;
    private Usuario usuario = new Usuario();
    private Usuario? _session_user;
    private bool usuarioAutorizado = false;
    DialogoConfirmacion dialogo = null!;

    protected override void OnInitialized()
    {
        _session_user = ServicioGestionDeSesion.ObtenerUsuario();
        usuarioAutorizado = _session_user != null && _session_user.EsAdmin;
        if(usuarioAutorizado)
        {
            _usuarios = CasoDeUsoUsuarioConsultarTodos.Ejecutar();
        }
    }

    // Alta de Usuarios
    private void AgregarUsuario()
    {
        Navegador.NavigateTo("agregar-usuario");
    }

     private void EditarUsuario(Usuario usuario)
    {
        Navegador.NavigateTo($"editar-usuario/{usuario.Id}");
    }

    // Baja de Usuarios Mensaje confirmacion
    private void ConfirmarEliminacion(Usuario usuario)
    {
        if (dialogo != null)
        {
            dialogo.Mostrar(
                $"Â¿Desea eliminar al usuario {usuario.Nombre} {usuario.Apellido}?",
                EventCallback.Factory.Create(this, () => EliminarUsuario(usuario))
            );
        }
    }
    private void EliminarUsuario(Usuario usuario)
    {
        CasoDeUsoUsuarioBaja.Ejecutar(usuario.Id, _session_user.Id);
        _usuarios = CasoDeUsoUsuarioConsultarTodos.Ejecutar();
    }
}
