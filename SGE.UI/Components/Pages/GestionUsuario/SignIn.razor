@page "/sign-in"
@rendermode InteractiveServer
@inject IServicioGestionDeSesion ServicioGestionDeSesion
@inject CasoDeUsoUsuarioConsultarTodos CasoDeUsoUsuarioConsultarTodos
@inject CasoDeUsoUsuarioRegistrar CasoDeUsoUsuarioRegistrar
@inject CasoDeUsoUsuarioBaja CasoDeUsoUsuarioBaja
@inject NavigationManager Navegador

<div class="mb-3">
    <h1>Registrarse</h1>
</div>
<div style="width:50%">
    <EditForm Model="@user_registro" OnValidSubmit="Registrar">
        <div class="mb-3">
            <label for="nombre" class="form-label" >Nombre:</label>
            <InputText required id="nombre"  class="form-control" @bind-Value="user_registro.Nombre" />
        </div>
        <div class="mb-3">
            <label for="apellido" class="form-label" >Apellido:</label>
            <InputText id="apellido" class="form-control" @bind-Value="user_registro.Apellido" />
        </div>
        <div class="mb-3">
            <label for="email" class="form-label">Correo Electrónico:</label>
            <InputText required id="email" class="form-control" @bind-Value="user_registro.Email" />
        </div>
        <div class="mb-3">
            <label for="contraseña" class="form-label">Contraseña:</label>
            <InputText required id="contraseña" class="form-control" type="password" @bind-Value="user_registro.Contraseña" />
        </div>
        <button type="submit" class="btn btn-primary">Registrarse</button>
    </EditForm>
</div>
@if (mensaje != ""){
    <p style="color: red">@mensaje</p>
}


@code {

    private Usuario usuario = new Usuario();
    private SignInModel user_registro = new SignInModel();
    private List<Usuario> _usuarios;
    private int cantidadUsuarios;
    private string mensaje = "";

    protected override void OnInitialized()
    {
        cantidadUsuarios = VerificarBaseDeDatos();
    }

    private int VerificarBaseDeDatos()
    {
        _usuarios = CasoDeUsoUsuarioConsultarTodos.Ejecutar(); // Método para contar usuarios en el repositorio
        return  _usuarios.Count;
    }

    private void Registrar()
    {
        try
        {
            if(cantidadUsuarios == 0)
            {
                Console.WriteLine("Se creo el primer usuario");
                usuario.EsAdmin = true;
            }
            usuario.Nombre = user_registro.Nombre;
            usuario.Apellido = user_registro.Apellido;
            usuario.Email = user_registro.Email;
            usuario.Contraseña = user_registro.Contraseña;
            CasoDeUsoUsuarioRegistrar.Ejecutar(usuario);
            ServicioGestionDeSesion.IniciarSesion(usuario);
            Navegador.NavigateTo("/");
        }
        catch(Exception e)
        {
            mensaje = e.Message;
            Console.WriteLine("Usuario Invalido: " + e.Message);
        }
    }

    private class SignInModel
    {
        public string? Nombre;
        public string? Apellido;
        public string? Email;
        public string? Contraseña;
    }
}
