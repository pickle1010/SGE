@page "/expedientes"
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteConsultarTodos CasoDeUsoExpedienteConsultarTodos
@inject CasoDeUsoExpedienteBaja CasoDeUsoExpedienteBaja
@inject NavigationManager Navegador

<PageTitle>SGE - Expedientes</PageTitle>
<button class="btn btn-primary" @onclick="AgregarExpediente">Agregar Expediente</button>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Caratula</th>
            <th>Estado</th>
            <th>Fecha y Hora de Creacion</th>
            <th>Fecha y Hora de Modificaci√≥n</th>
            <th>Modificado por</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var e in _expedientes)
        {
            <tr>
                <td>@e.Id</td>
                <td>@e.Caratula</td>
                <td>@e.Estado</td>
                <td>@e.FechaHoraCreacion</td>
                <td>@e.FechaHoraUltimaModificacion</td>
                <td>@e.IdUsuarioUltimaModificacion</td>
                <td>
                    <button class="btn btn-secondary" @onclick="() => ModificarExpediente(e.Id)">Editar</button>
                    <button class="btn btn-danger" @onclick="() => EliminarExpediente(e.Id)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code
{
    List<Expediente> _expedientes;
    
    private void AgregarExpediente(){
        Navegador.NavigateTo("agregar-expediente");
    }

    private void ModificarExpediente(int Id){
        Navegador.NavigateTo($"/modificar-expediente/{Id}");
    }

    private void EliminarExpediente(int Id)
    {
        try
        {
            CasoDeUsoExpedienteBaja.Ejecutar(Id, 1);
            _expedientes = CasoDeUsoExpedienteConsultarTodos.Ejecutar(); 
        }
        catch (Exception e)
        {
            Console.WriteLine("Error al eliminar el expediente: " + e.Message);
        }
    }

    protected override void OnInitialized()
    {
        _expedientes = CasoDeUsoExpedienteConsultarTodos.Ejecutar();
    }


}