@page "/modificar-tramite/{id:int}"
@rendermode InteractiveServer
@inject IServicioGestionDeSesion ServicioGestionDeSesion
@inject CasoDeUsoTramiteModificacion CasoDeUsoTramiteModificacion
@inject ITramiteRepositorio RepositorioTramite
@inject NavigationManager Navegador

@if(_session_user == null)
{
    <PageTitle>SGE - Acceso denegado</PageTitle>
    <h3>Acceso denegado</h3>
    <p>Para ver este contenido debes iniciar sesion o registrarte.</p>
}
else
{
    <PageTitle>SGE - Modificar Tramite</PageTitle>
    <h3>Modificar Tramite</h3>

    @if (!string.IsNullOrEmpty(errorMensaje))
    {
        <div class="alert alert-danger">@errorMensaje</div>
    }

    <EditForm Model="@tramite" OnValidSubmit="ModificarTramiteValido">
        
        <div class="form-group">
            <label for="IDExpediente">ID Expediente:</label>
            <InputNumber id="idExpediente" @bind-Value="tramite.ExpedienteId" />
        </div>    

        <div>
            <label for="Contenido">Contenido:</label>
            <InputText id="contenido" @bind-Value="tramite.Contenido" />
        </div>

        <div class="form-group">
            <label for="Etiqueta">Etiqueta:</label>
            <InputSelect id="etiqueta" class="form-control" @bind-Value="tramite.Etiqueta">
                @foreach (var etiqueta in Enum.GetValues(typeof(EtiquetaTramite)))
                {
                    <option value="@etiqueta">@etiqueta</option>
                }
            </InputSelect>
        </div>

        <button type="submit">Agregar</button>
    </EditForm>
}

@code {
    [Parameter] public int id { get; set; }
    private Tramite tramite= new Tramite();
    private Usuario? _session_user;
    private string errorMensaje;

    protected override void OnInitialized()
    {
        _session_user = ServicioGestionDeSesion.ObtenerUsuario();
        try
        {
            tramite = RepositorioTramite.ConsultarPorId(id);
        }
        catch (Exception e)
        {
            Console.WriteLine("Error al cargar el trámite: " + e.Message);
            // Manejo de errores adicional si es necesario
        }
    }
    private void ModificarTramiteValido()
    {
        try
        {
            CasoDeUsoTramiteModificacion.Ejecutar(tramite, _session_user.Id);
            Navegador.NavigateTo("tramites");
        }
        catch(Exception e)
        {
            errorMensaje = "Trámite Inválido: " + e.Message;
        }
    }
}
